{"mappings":"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","sources":["public/js/leaflet.js","public/js/alerts.js","public/js/login.js","public/js/updateSettings.js","public/js/resizeImage.js","public/js/signup.js","public/js/stripe.js","public/js/index.js"],"sourcesContent":["/* eslint-disable */\r\n\r\nexport const displayMap = locations => {\r\n    const map = L.map('map', { zoomControl: false });\r\n    \r\n    // Add a tile layer to add to our map\r\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n    attribution:\r\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n    }).addTo(map);\r\n    \r\n    // Create icon using the image provided by Jonas\r\n    var greenIcon = L.icon({\r\n        iconUrl: '/img/pin.png',\r\n        iconSize: [32, 40], // size of the icon\r\n        iconAnchor: [16, 40], // point of the icon which will correspond to marker's location\r\n        popupAnchor: [0, -50], // point from which the popup should open relative to the iconAnchor\r\n    });\r\n    \r\n    // Add locations to the map\r\n    const points = [];\r\n    locations.forEach(loc => {\r\n        // Create points\r\n        points.push([loc.coordinates[1], loc.coordinates[0]]);\r\n\r\n        // Add markers\r\n        L.marker([loc.coordinates[1], loc.coordinates[0]], { icon: greenIcon })\r\n            .addTo(map)\r\n            // Add popup\r\n            .bindPopup(`<p>Day ${loc.day}: ${loc.description}</p>`, {\r\n            autoClose: false,\r\n            className: 'mapPopup',\r\n            })\r\n            .openPopup();\r\n    });\r\n    \r\n    // Set map bounds to include current location\r\n    const bounds = L.latLngBounds(points).pad(0.5);\r\n    map.fitBounds(bounds);\r\n    \r\n    // Disable scroll on map\r\n    map.scrollWheelZoom.disable();\r\n};\r\n","/* eslint-disable */\r\n\r\nexport const hideAlert = () => {\r\n    const el = document.querySelector('.alert');\r\n    if (el) el.parentElement.removeChild(el);\r\n};\r\n\r\n// type is 'success' or 'error'\r\nexport const showAlert = (type, msg) => {\r\n    hideAlert();\r\n    const markup = `<div class=\"alert alert--${type}\">${msg}</div>`;\r\n    document.querySelector('body').insertAdjacentHTML('afterbegin', markup);\r\n    window.setTimeout(hideAlert, 5000);\r\n}","/* eslint-disable */\r\n// import axios from 'axios';\r\nimport { showAlert } from \"./alerts\";\r\n\r\nexport const login = async (email, password) => {\r\n\r\n    try{\r\n        const res = await axios({\r\n            method: 'POST',\r\n            url: '/api/v1/users/login',\r\n            data: {\r\n                email,\r\n                password\r\n            }\r\n        })\r\n        \r\n        if (res.data.status === 'success') {\r\n            showAlert('success', 'Logged in successfully!');\r\n            window.setTimeout( () => {\r\n                location.assign('/');\r\n            }, 1500)\r\n        }\r\n    } catch (err) {\r\n        showAlert('error', err.response.data.message);\r\n    }\r\n};\r\n\r\nexport const logout = async () => {\r\n    try {\r\n        // console.log('in');\r\n        const res = await axios({\r\n            method: 'GET',\r\n            url: '/api/v1/users/logout'\r\n        })\r\n\r\n        if (res.data.status === 'success') {\r\n            window.setTimeout( () => {\r\n                location.assign('/');\r\n            }, 1500)\r\n        }\r\n    } catch (err) {\r\n        showAlert('error', 'Error logging out! Try again.');\r\n    }\r\n};\r\n\r\n","/* eslint-disable */\r\n// update data\r\nimport { showAlert } from \"./alerts\";\r\n\r\nexport const updateSettings = async (data, type) => {\r\n    try{\r\n        const url = \r\n            type === 'password'\r\n            ? '/api/v1/users/updateMyPassword'\r\n            : '/api/v1/users/updateMe';\r\n\r\n        const res = await axios({\r\n            method: 'PATCH',\r\n            url,\r\n            data\r\n        })\r\n\r\n        if (res.data.status === 'success') {\r\n            showAlert('success', `${type.toUpperCase()} setting successfully!`);\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        showAlert('error', err.response.data.message);\r\n    }\r\n};\r\n","/*eslint-disable*/\r\nexport const resizeImage = (\r\n    image,\r\n    targetWidth,\r\n    targetHeight,\r\n    targetElement = undefined\r\n) => {\r\n    let data;\r\n    const filerdr = new FileReader();\r\n    filerdr.onload = (evt) => {\r\n        const img = new Image();\r\n        img.onload = () => {\r\n            const canvas = document.createElement(\"canvas\");\r\n            const ctx = canvas.getContext(\"2d\");\r\n            canvas.width = targetWidth;\r\n            canvas.height = targetHeight;\r\n            let startWidth;\r\n            let startHeight;\r\n            let width;\r\n            let height;\r\n            if (img.height > img.width) {\r\n                startWidth = 0;\r\n                startHeight = (img.height - img.width) / 2;\r\n                width = img.width;\r\n                height = img.width * (targetHeight / targetWidth);\r\n            } else {\r\n                startWidth = (img.width - img.height) / 2;\r\n                startHeight = 0;\r\n                width = img.height * (targetWidth / targetHeight);\r\n                height = img.height;\r\n            }\r\n            ctx.drawImage(\r\n                img,\r\n                startWidth, // Crop start width\r\n                startHeight, // Crop start height\r\n                width, // Cropped width\r\n                height, // Cropped height\r\n                0, // Canvas start width\r\n                0, // Canvas start height\r\n                targetWidth, // Result width\r\n                targetHeight // Result height\r\n            );\r\n            data = canvas.toDataURL(\"image/jpeg\");\r\n            if (targetElement) targetElement.src = data;\r\n        };\r\n        img.src = evt.target.result;\r\n    };\r\n    filerdr.readAsDataURL(image);\r\n    return data;\r\n};","/* eslint-disable */\r\nimport { showAlert } from \"./alerts\";\r\n\r\nexport const signup = async (name, email, password, passwordConfirm) => {\r\n    \r\n    try{\r\n        const res = await axios({\r\n            method: 'POST',\r\n            url: '/api/v1/users/signup',\r\n            data: {\r\n                name,\r\n                email,\r\n                password,\r\n                passwordConfirm\r\n            }\r\n        })\r\n        \r\n        if (res.data.status === 'success') {\r\n            showAlert('success', 'Account created successfully!');\r\n            window.setTimeout( () => {\r\n                location.assign('/');\r\n            }, 1500)\r\n        }\r\n    } catch (err) {\r\n        showAlert('error', err.response.data.message);\r\n    }\r\n};","/* eslint-disable */\r\nimport { showAlert } from \"./alerts\";\r\nconst stripe = Stripe('pk_test_51Lg4wfIGwHIlOnnnUTzazEz6gRwdCEQwkogKTQSfQBHO6EB72NBzV5QChjmCS1CTANLcx7Pd1AApPFFWljgVxyKQ00K1ss2Wn9');\r\n\r\nexport const bookTour = async tourId => {\r\n    try {\r\n        // 1) get checkout session from API\r\n        const session = await axios(\r\n            `/api/v1/bookings/checkout-session/${tourId}`\r\n        );\r\n        // console.log(session);\r\n    \r\n        // 2) create checkout from + charge credit card\r\n        await stripe.redirectToCheckout({\r\n            sessionId: session.data.session.id\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n        showAlert('error', err);\r\n    }\r\n}","/* eslint-disable */\r\nimport { displayMap } from './leaflet';\r\nimport { login, logout } from './login';\r\nimport { updateSettings } from './updateSettings';\r\nimport { resizeImage } from \"./resizeImage.js\";\r\nimport { signup } from './signup';\r\nimport { bookTour } from './stripe';\r\n\r\n// DOM ELEMENTS\r\nconst mapbox = document.getElementById('map');\r\nconst loginForm = document.getElementById('form--login');\r\nconst logOutBtn = document.querySelector('.nav__el--logout');\r\nconst userDataForm = document.getElementById('form--update');\r\nconst userPasswordForm = document.getElementById('form--password');\r\nconst pfpUploadInput = document.getElementById(\"photo\");\r\nconst formSignUp = document.getElementById('form--signup');\r\nconst bookBtn = document.getElementById('book-tour');\r\n\r\n// DELEGATION\r\nif (mapbox) {\r\n    const  locations = JSON.parse(mapbox.dataset.locations);\r\n    displayMap(locations);\r\n}\r\n\r\nif (loginForm) {\r\n    loginForm.addEventListener('submit', e => {\r\n        e.preventDefault();\r\n\r\n        // Log in form values\r\n        const email = document.getElementById('email').value;\r\n        const password = document.getElementById('password').value;\r\n\r\n        login(email, password);\r\n    });\r\n}\r\n\r\nif (logOutBtn) logOutBtn.addEventListener('click', logout);\r\n\r\nif (userDataForm) {\r\n    pfpUploadInput.addEventListener(\"change\", async (e) => {\r\n        const inputPic = pfpUploadInput.files[0];\r\n        if (inputPic) {\r\n            const userPhotoElement =\r\n                document.querySelector(\".form__user-photo\");\r\n            resizeImage(inputPic, 500, 500, userPhotoElement);\r\n        }\r\n    });\r\n    userDataForm.addEventListener('submit', async e => {\r\n        e.preventDefault();\r\n\r\n        const form = new FormData();\r\n        form.append('name', document.getElementById('name').value);\r\n        form.append('email', document.getElementById('email').value);\r\n        form.append('photo', document.getElementById('photo').files[0]);\r\n        // console.log(form);\r\n\r\n        await updateSettings(form, 'data');\r\n    });\r\n}\r\n\r\nif (userPasswordForm) {\r\n    userPasswordForm.addEventListener('submit', async e => {\r\n        e.preventDefault();\r\n        document.querySelector('.btn--save-password').textContent = 'Updating...';\r\n        \r\n        const passwordCurrent = document.getElementById('password-current').value;\r\n        const password = document.getElementById('password').value;\r\n        const passwordConfirm = document.getElementById('password-confirm').value;\r\n\r\n        await updateSettings({passwordCurrent, password, passwordConfirm}, 'password');\r\n\r\n        document.querySelector('.btn--save-password').textContent = 'Save password';\r\n        document.getElementById('password-current').value = '';\r\n        document.getElementById('password').value = '';\r\n        document.getElementById('password-confirm').value = '';\r\n\r\n    });\r\n}\r\n\r\nif (formSignUp) {\r\n    formSignUp.addEventListener('submit', e => {\r\n        e.preventDefault();\r\n\r\n        const firstname = document.getElementById('firstname').value;\r\n        const lastname = document.getElementById('lastname').value;\r\n        const name = firstname + ' ' + lastname;\r\n        const email = document.getElementById('email').value;\r\n        const password = document.getElementById('password').value;\r\n        const passwordConfirm = document.getElementById('password-confirm').value;\r\n\r\n        signup(name, email, password, passwordConfirm);\r\n    });\r\n}\r\n\r\nif (bookBtn)\r\n    bookBtn.addEventListener('click', e => {\r\n        e.target.textContent = 'Processing...';\r\n        const { tourId } = e.target.dataset;\r\n        bookTour(tourId);\r\n    });"],"names":["$b65541e07a62170e$export$4c5dd147b21b9176","locations","map","L","zoomControl","tileLayer","attribution","addTo","greenIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","points","forEach","loc","push","coordinates","marker","bindPopup","day","description","autoClose","className","openPopup","bounds","latLngBounds","pad","fitBounds","scrollWheelZoom","disable","$7dc87b7f457e655a$export$516836c6a9dfc573","el","document","querySelector","parentElement","removeChild","$7dc87b7f457e655a$export$de026b00723010c1","type","msg","markup","insertAdjacentHTML","window","setTimeout","$bf5b431e6a69fea8$export$596d806903d1f59e","async","email","password","axios","method","url","data","status","location","assign","err","response","message","$955535ce7513e32c$export$f558026a994b6051","toUpperCase","console","log","$d4918e0850faa5b0$export$b423874dd89ac031","image","targetWidth","targetHeight","targetElement","filerdr","FileReader","onload","evt","img","Image","canvas","createElement","ctx","getContext","startWidth","startHeight","width","height","drawImage","toDataURL","src","target","result","readAsDataURL","$dbd1452def9256d5$export$7200a869094fec36","name","passwordConfirm","$9fd71c92b6f885af$var$stripe","Stripe","$9fd71c92b6f885af$export$8d5bdbf26681c0c2","tourId","session","redirectToCheckout","sessionId","id","$407eccdc61ba7a94$var$mapbox","getElementById","$407eccdc61ba7a94$var$loginForm","$407eccdc61ba7a94$var$logOutBtn","$407eccdc61ba7a94$var$userDataForm","$407eccdc61ba7a94$var$userPasswordForm","$407eccdc61ba7a94$var$pfpUploadInput","$407eccdc61ba7a94$var$formSignUp","$407eccdc61ba7a94$var$bookBtn","JSON","parse","dataset","addEventListener","e","preventDefault","value","inputPic","files","userPhotoElement","form","FormData","append","textContent","passwordCurrent"],"version":3,"file":"index.js.map","sourceRoot":"../../../"}